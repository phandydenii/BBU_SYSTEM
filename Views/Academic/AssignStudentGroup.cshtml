@model BBU_SYSTEM.ViewModel.StudentViewModel
@{
    ViewData["Title"] = "Index";
}
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                @*<h3 class="card-title">AssignStudentGroup</h3>*@
                <div class="row">
                    <div class="col-md-2">
                        <label>Degree</label>
                        <select id="cboDegree" onchange="DegreeChange()" class="form-control select2" style="width: 100%;">
                            <option selected="selected" disabled>Select Degree</option>
                            @foreach (var data in Model.degrees!)
                            {
                                <option value=@data.degree_id>@data.degree</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label>School</label>
                        <select onchange="SchoolChange()" id="cboSchool" class="form-control select2" style="width: 100%;">
                            <option selected="selected" disabled>Select School</option>
                            @foreach (var data in Model.schools!)
                            {
                                <option value=@data.school_id>@data.school_name</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label>Field</label>
                        <select id="cboField" class="form-control select2" style="width: 100%;">
                            <option selected="selected" disabled>Select Field</option>
                            @*@foreach (var data in Model.fields!)
                                {
                                    <option value=@data.field_id>@data.field_name</option>
                                }*@
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label>Promotion</label>
                        <select id="cboPromotion" onchange="PromotionChange()" class="form-control select2" style="width: 100%;">
                            <option selected="selected" disabled>Select Promotion</option>
                            @*@foreach (var data in Model.promotions!)
                                {
                                    <option value=@data.promotion_id>@data.promotion_no</option>
                                }*@
                        </select>
                    </div>
                    <div class="col-md-1">
                        <label>Stage</label>
                        <select id="cboStage" onchange="StageChange()" class="form-control select2" style="width: 100%;">
                            <option selected="selected" disabled>Select Stage</option>
                            @*@foreach (var data in Model.stages!)
                                {
                                    <option value=@data.stage_id>@data.stage_no</option>
                                }*@
                        </select>
                    </div>
                    <div class="col-md-1">
                        <label>Term</label>
                        <select id="cboTerm" onchange="TermChange()" class="form-control select2" style="width: 100%;">
                            <option selected="selected" disabled>Select Term</option>
                            @*@foreach (var data in Model.stages!)
                                {
                                    <option value=@data.stage_id>@data.stage_no</option>
                                }*@
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label>Group</label>
                        <select id="cboGroup" class="form-control select2" style="width: 100%;">
                            <option selected="selected" disabled value="-1">Select Group</option>
                            @*@foreach (var data in Model.stages!)
                                {
                                    <option value=@data.stage_id>@data.stage_no</option>
                                }*@
                        </select>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-12">
                        <button onclick="OnFilter()" class="btn btn-success float-right">Filter</button>
                        <button onclick="" class="btn btn-success float-right">Assign Group</button>
                    </div>
                </div>


            </div>
            <div class="card-body">
                <table id="tblStudent" class="table table-bordered table-striped" style="width: 100%;">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Name Khmer</th>
                            <th>Gender</th>
                            <th>DOB</th>
                            <th>Phone</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script src="~/AdminLTE/plugins/jquery/jquery.min.js"></script>
<script>

    const fields = @Html.Raw(Json.Serialize(Model.fields));
    const promotions = @Html.Raw(Json.Serialize(Model.promotions));
    const stages = @Html.Raw(Json.Serialize(Model.stages));
    const terms = @Html.Raw(Json.Serialize(Model.terms));
    const groups = @Html.Raw(Json.Serialize(Model.groups));
    function DegreeChange() {
        SchoolChange();
    }
    function SchoolChange() {
        const degree_id = $("#cboDegree").val();
        const school_id = $("#cboSchool").val();

        if (!degree_id || !school_id) return;

        const cboField = document.getElementById("cboField");
        cboField.innerText = "";
        const optionField = document.createElement("option");
        optionField.value = -1;
        optionField.text = "Select Field";
        optionField.disabled = true;
        cboField.appendChild(optionField);
        fields.forEach(item => {
            if (item.degree_id == degree_id && item.school_id == school_id) {
                const option = document.createElement("option");
                option.value = item.field_id;
                option.text = item.field_name;
                cboField.appendChild(option);
            }
        });

        const cboPromotion = document.getElementById("cboPromotion");
        cboPromotion.innerText = "";
        const optionPro = document.createElement("option");
        optionPro.value = -1;
        optionPro.text = "Select Promotion";
        optionPro.disabled = true;
        cboPromotion.appendChild(optionPro);
        promotions.forEach(item => {
            if (item.degree_id == degree_id && item.school_id == school_id) {
                const option = document.createElement("option");
                option.value = item.promotion_id;
                option.text = item.promotion_no;
                cboPromotion.appendChild(option);
            }
        });
        $("#cboField").val(-1);
        $("#cboPromotion").val(-1);
    }

    function PromotionChange() {
        const promotion_id = $("#cboPromotion").val();
        if (!promotion_id) return;

        const cboStage = document.getElementById("cboStage");
        cboStage.innerText = "";
        const option = document.createElement("option");
        option.value = -1;
        option.text = "Select Stage";
        option.disabled = true;
        cboStage.appendChild(option);
        stages.forEach(item => {
            if (item.promotion_id == promotion_id) {
                const option = document.createElement("option");
                option.value = item.stage_id;
                option.text = item.stage_no;
                cboStage.appendChild(option);
            }
        });
        $("#cboStage").val(-1);
        $("#cboGroup").val(-1);
    }
    function StageChange() {
        const stage_id = $("#cboStage").val();
        if (!stage_id) return;
        const cboTerm = document.getElementById("cboTerm");
        cboTerm.innerText = "";
        const option = document.createElement("option");
        option.value = -1;
        option.text = "Select Term";
        option.disabled = true;
        cboTerm.appendChild(option);
        terms.forEach(item => {
            if (item.stage_id == stage_id) {
                const option = document.createElement("option");
                option.value = item.term_id;
                option.text = item.term_no;
                cboTerm.appendChild(option);
            }
        });
        $("#cboTerm").val(-1);
    }
    function TermChange() {
        const stage_id = $("#cboStage").val();
        const field_id = $("#cboField").val();
        if (!stage_id || !field_id) return;

        const cboGroup = document.getElementById("cboGroup");
        cboGroup.innerText = "";
        const option = document.createElement("option");
        option.value = -1;
        option.text = "Select Group";
        option.disabled = true;
        cboGroup.appendChild(option);
        groups.forEach(item => {
            if (item.stage_id == stage_id && item.field_id==field_id) {
                const option = document.createElement("option");
                option.value = item.group_id;
                option.text = item.group_name;
                cboGroup.appendChild(option);
            }
        });
        $("#cboGroup").val(-1);
    }

    function OnFilter() {
        //const term_no = $("#cboTerm").innerText;
        const term_no = $("#cboTerm option:selected").text();;
        const group_id = $("#cboGroup").val();

        if (!group_id || !term_no) return;
        $("#tblStudent")
            .DataTable({
                responsive: true,
                lengthChange: true,
                autoWidth: true,
                ajax: {
                    url: `/api/mis/${campus()}/students/filter/${group_id}/${term_no}`,
                    type: "GET",
                    dataSrc: "data",
                },
                columns: [
                    { data: "student_id" },
                    { data: "student_name" },
                    { data: "student_name_in_khmer" },
                    { data: "sex" },
                    { data: "date_of_birth" },
                    { data: "phone" },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return `
                            <div class="input-group-prepend">
                                <button type="button" class="btn btn-primary dropdown-toggle btn-sm" data-toggle="dropdown">
                                    Action
                                </button>
                                <div class="dropdown-menu" style="min-width: 8rem;">
                                    <div class="col-md-12">
                                        <a href"/student/details?student_id=PP47981" class="btn btn-success btn-sm" style="display: block;margin:.2rem 0rem">Edit</a>
                                         <a href="student/details/${row.student_id}" class="btn btn-warning btn-sm" style="display: block;margin:.2rem 0rem">View</a>
                                        <a class="btn btn-danger btn-sm" style="display: block;margin:.2rem 0rem">Delete</a>
                                    </div>
                                </div>
                            </div>
                            `;
                        }

                    }
                ]
            })
            .buttons()
            .container()
            .appendTo("#example1_wrapper .col-md-6:eq(0)");
    }
</script>